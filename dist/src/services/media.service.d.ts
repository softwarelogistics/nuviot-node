import { NuviotClientService } from './nuviot-client.service';
export declare class MediaService {
    private nuviotClient;
    private _mediaLibraries;
    private _mediaLibrary;
    private _mediaResoures;
    private _mediaResource;
    private _libraries$;
    private _library$;
    private _resources$;
    private _resource$;
    constructor(nuviotClient: NuviotClientService);
    loadMediaLibraries(): Promise<Media.MediaLibrarySummary[]>;
    loadMediaResources(libraryId: string): Promise<Media.MediaResourceSummary[]>;
    newMediaLibrary(): Promise<Core.FormResult<Media.MediaLibrary, Media.MediaLibraryView>>;
    loadMediaLibrary(id: string): Promise<Core.FormResult<Media.MediaLibrary, Media.MediaLibraryView>>;
    insertMediaLibrary(library: Media.MediaLibrary): Promise<Core.InvokeResult>;
    updateMediaLibrary(library: Media.MediaLibrary): Promise<Core.InvokeResult>;
    newMediaResource(): Promise<Core.FormResult<Media.MediaResource, Media.MediaResourceView>>;
    loadMediaResource(id: string): Promise<Core.FormResult<Media.MediaLibrary, Media.MediaLibraryView>>;
    insertMediaResource(resource: Media.MediaResource): Promise<Core.InvokeResult>;
    updateMediaResource(resource: Media.MediaResource): Promise<Core.InvokeResult>;
    onMediaLibraries(): void;
    onMediaLibrary(): void;
    onMediaResources(): void;
    onMediaResource(): void;
    setMediaLibraries(libraries: Media.MediaLibrarySummary[]): void;
    setMediaLibrary(library: Media.MediaLibrary): void;
    setMediaResources(resources: Media.MediaResourceSummary[]): void;
    setMediaResource(resource: Media.MediaResource): void;
    getMediaLibraries(): Media.MediaLibrarySummary[];
    getMediaLibrary(): Media.MediaLibrary;
    getMediaResources(): Media.MediaResourceSummary[];
    getMediaResource(): Media.MediaResource;
}
